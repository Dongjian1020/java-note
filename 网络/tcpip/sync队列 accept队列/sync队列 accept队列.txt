当client发送了SYN，会将给请求放入到sync队列中
当server回复了SYN，client也又回复了，该请求会 试图 放入到accept队列（）
	serversocket.accept()的调用 将会从该队列中取出一个连接
	当accept队列满时，server会发消息给client：拒绝连接

----------------------------示例

public class ClientSocketClass {
    private static Socket[] clients = new Socket[30];  
    
    public static void main(String[] args) throws Exception {
        for (int i = 0; i < 10; i++) {
            clients[i] = new Socket("127.0.0.1", 8888);
            System.out.println("Client:" + i);
        }
    }
}

public class ServerSocketClass {
    public static void main(String[] args) throws Exception {
        ServerSocket server = new ServerSocket(8888, 5);
        
        while (true) {
            // server.accept();
        }
    }
}

Client:0
Client:1
Client:2
Client:3
Client:4
Exception in thread "main" java.net.ConnectException: Connection refused: connect
    at java.net.DualStackPlainSocketImpl.connect0(Native Method)
    at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)
    at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:339)
    at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:200)
    at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:182)
    at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
    at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
    at java.net.Socket.connect(Socket.java:579)
    at java.net.Socket.connect(Socket.java:528)
    at java.net.Socket.<init>(Socket.java:425)
    at java.net.Socket.<init>(Socket.java:208)
    at org.xrq.test.socket.ClientSocketClass.main(ClientSocketClass.java:11)