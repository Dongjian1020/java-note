参见：
HTTP 长连接的那些事
	https://my.oschina.net/lifany/blog/874399
HTTP 的长连接和短连接
	http://blog.jobbole.com/104108/
为什么说基于TCP的移动端IM仍然需要心跳保活？
	http://www.52im.net/thread-281-1-1.html
HTTP长连接和短连接
	http://www.cnblogs.com/0201zcr/p/4694945.html
HTTP持久连接
	https://zh.wikipedia.org/wiki/HTTP%E6%8C%81%E4%B9%85%E8%BF%9E%E6%8E%A5#cite_note-1
Android 之长连接实现
	https://juejin.im/entry/57861b50128fe100603b1df8
	使用MINA来实现长连接

什么是连接：
client server双方 仅仅管理着连接的状态（消耗着 tcp端口，内存等资源）（并不是一个真实的物理的连接）

----------------------------http长连接
为了解决什么：底层为tcp连接，而tcp连接的建立需要3次握手（有资源消耗），当一次通信结束后，就关闭了该连接，后续再访问相同的server时，还是要3次握手来建立连接
而如果能保持该通道，则，后续向同一个server（host:ip）进行通信时，都将复用该通道（避免了再次建立tcp连接（找到目标地址（ip和port），也需要3次握手））

如何实现：
需要client/server双方的支持：
	request/response头中包含：Connection: Keep-Alive
		在http1.1中，默认请求头中 都加 keep-alive
但，server可以完全忽视请求头中的keep-alive，而是主动发起4次挥手
	或，server可以设置一个 超时时间，在该时间内不发送数据，则关闭连接
	或，对于同一个tcp通道，在N次请求后，就关闭该tcp通道

当要关闭连接时：Connection: Close

长连接有什么问题：
当client已经失效，但是server并不知道（或是很长时间后才知道），而server还在 维持着对应该client的连接状态（tcp端口，内存等）
如何解决：http心跳：
	client定时（如：5分钟，10分钟等）向server发送心跳包，来告知server：我还在线，而server在收到该心跳包后，告诉client再隔多久来发送下次的心跳包
	如果server在指定的时间内，没有收到该心跳包，那么断开连接来释放资源
	--
	tcp也有的超时检测，那么为什么还需要 http心跳：
		. 在一个tcp连接上，如果长时间没有数据交换，那么会被 中间节点（如：防火墙，运营商）断掉
		. tcp的心跳检测 太慢

应用场景：
client-server交互频繁，且长连接个数有限
连接池
push

HTTP 流水线技术
在同一个tcp通道上，多个http请求可以并发执行
目前，server还没有很好的支持

----------------------------tcp长连接
超时检测（不建议开启）：
为了：检测对方是否还在
当一个tcp连接建立后，当client长时间（如：2小时）不发送数据到server，server便会发送一个 keep alive探测包（一个ACK空数据），
	如果client回复ack，证明连接正常
	如果client回复rst，说明连接退出
	如果client回复fin，说明连接崩溃
	如果client未回应，继续发送超时检测（75s一次，共10次）来继续检测client是否存在
如果到最后也没有收到client的响应，那么server的该连接端断掉
--
如何开启：
	setsockopt将SOL_SOCKET.SO_KEEPALIVE设置为1
	其他的设置选项：tcp_keepalive_time/tcp_keepalive_probes/tcp_keepalive_intvl
