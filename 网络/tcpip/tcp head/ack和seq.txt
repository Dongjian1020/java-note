参见：
理解TCP序列号（Sequence Number）和确认号（Acknowledgment Number）
	http://m.blog.csdn.net/a19881029/article/details/38091243

一个消息对应一个seq，其为：发送该消息之前，消息的累计发送量
而本消息的发送量为：
	如果发送了真实的数据（如：http的request头，其本质为string），那么为：该真实数据的字节长度（用len来表示），
	如果是SYN/FIN，那么为1
	如果仅仅是反馈ACK，那么为=0
	
该消息seq.next = 该消息的seq + 该消息的本次发送量
	作为 下次消息的seq
	作为 对方反馈的ack的值（根据该值找到：该回复 是针对于 之前哪条发送的消息）

----------------------------

当我收到了对端发送的消息，我需要给对端一个反馈消息（如果不反馈，那么对端无法知道我是否收到了该消息，那么他会尝试再发送该消息（一段时间之后））
	该反馈消息的ACK，其值为 反馈该消息时，消息的累计接收量

当对端收到了我反馈的ACK消息，根据ACK的取值，可知道：我的这次ACK是针对于 他之前发送的哪个消息的反馈
	如何找到该消息：该消息的seq.next==ACK值，即是：该消息发送了之后，对方的消息接收量可为ACK

消息的发送，必须包含seq和ACK
即是告诉：
	本次消息发送之前 我已经发送了多少 和 
	我总共接收了多少