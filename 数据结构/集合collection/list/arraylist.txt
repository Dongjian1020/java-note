参见：
图解集合1：ArrayList
	http://www.cnblogs.com/xrq730/p/4989451.html

扩容：
新容量=原数组大小先乘以3，再除以2，最后加1

拷贝方式：
System.public static native void arraycopy(
	Object src,  int  srcPos,
	Object dest, int destPos,
	int length);
说明：src和dest可以是同一个对象

优缺点：
ArrayList的优点如下：
1、ArrayList底层以数组实现，是一种随机访问模式，再加上它实现了RandomAccess接口，因此查找也就是get的时候非常快
2、ArrayList在顺序添加一个元素的时候非常方便，只是往数组里面添加了一个元素而已
--
不过ArrayList的缺点也十分明显：
1、删除元素的时候，涉及到一次元素复制，如果要复制的元素很多，那么就会比较耗费性能
2、插入元素的时候，涉及到一次元素复制，如果要复制的元素很多，那么就会比较耗费性能
--
因此，ArrayList比较适合顺序添加、随机访问的场景。

线程安全的list
arraylist不是线程安全的，可以通过Collections.synchronizedList(list)来得到线程安全的list版本（本质为：Collections$SynchronizedRandomAccessList类型）
或者使用Vector
	和arraylist的区别：可以指定 增长因子
