Java NIO: Non-blocking IO（非阻塞IO）

标准的IO基于字节流和字符流进行操作的，
而NIO是基于通道（Channel）（有点类型流的概念）和缓冲区（Buffer）进行操作，
	数据总是从通道读取到缓冲区中，
	或者从缓冲区写入到通道中。

Channel	
	FileChannel
	DatagramChannel
	SocketChannel
	ServerSocketChannel

Buffer
	ByteBuffer
	CharBuffer
	DoubleBuffer
	FloatBuffer
	IntBuffer
	LongBuffer
	ShortBuffer
	
要使用Selector，得向Selector注册Channel，然后调用它的select()方法。这个方法会一直阻塞到某个注册的通道有事件就绪。一旦这个方法返回，线程就可以处理这些事件，事件的例子有如新连接进来，数据接收等。

RandomAccessFile aFile = new RandomAccessFile("data/nio-data.txt", "rw");
FileChannel inChannel = aFile.getChannel();

ByteBuffer buf = ByteBuffer.allocate(48);

int bytesRead = inChannel.read(buf);
while (bytesRead != -1) {
	System.out.println("Read " + bytesRead);
	buf.flip();

	while(buf.hasRemaining()){
		System.out.print((char) buf.get());
	}

	buf.clear();
	bytesRead = inChannel.read(buf);
}
aFile.close();